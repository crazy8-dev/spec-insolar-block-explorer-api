openapi: 3.0.0
info:
  version: 1.0.0
  title: Insolar Explorer API
  contact:
    name: Insolar dev team
    url: 'https://insolar.io/team.html'
    email: dev-support@insolar.io
  description: >
    [Insolar Explorer](https://github.com/insolar/block-explorer)'s REST API
    documentation.


    Insolar Explorer is a service that allows users to search for and view the
    contents of individual transactions, records, lifelines, jet drops and jets.


    * Record—minimum unit of storage that contains an associated request,
    response, and maintenance details

    * Lifeline—sequence of records for object state where an object is a smart
    contract instance

    * Jet drop—unit of storage for jets

    * Jet—groups of lifelines


    Main API endpoints include:

    * Search endpoint: `/api/v1/search`

    * Endpoints for each entity type:
      * Records: `/api/v1/jet-drops/{jet_drop_id}/records`
      * Lifeline: `/api/v1/lifeline/{object_reference}/records`
      * Pulse: `/api/v1/pulses/{pulse_number}`
      * Pulses: `/api/v1/pulses`
      * Jet drop by jet ID: `/api/v1/jets/{jet_id}/jet-drops`
      * Jet drop by its ID: `/api/v1/jet-drops/{jet_drop_id}`
      * Jet drop by pulse number: `/api/v1/pulses/{pulse_number}/jet-drops`

    A search request first gets to the search endpoint where its the entity type
    `value` is identified.


    It then is redirected to the appropriate endpoint for detailed metadata to
    show the user on the Insolar Explorer Web UI.


    Search results can be paginated. Pagination parameters are optional and
    include:

    * Starting point that depends on the searched entity type: `from_index`,
    `from_pulse_number`, or `from_jet_drop_id`

    * Number of entries per page: `limit`

    * Number of entries to skip from the starting point to show on a new page:
    `offset`


    For example, for 10 entries per page starting from the pulse number 431920
    for a set of 200 entries:
    `<example.com>/<api_endpoint>?<params>&from_pulse_number=431920&limit=10&offset=0`.


    Search results can additionally be sorted by `index` or `pulse` in the
    descending or ascending order.


    For example, `<example.com>/<api_endpoint>?<params>&sort_by=-index`.


    Search results shown to the user on the Insolar Explorer Web UI may miss
    some data. The `Reload` button gets the missed data via requests to the API
    with additional filtering parameters:

    * `jet_drop_id_gt` and `jet_drop_id_lt` to obtain missing data within a
    range of jet drops (greater than, less then)

    * `pulse_number_gt` and `pulse_number_lt` to obtain missing data within a
    range of pulses (greater than, less then)

    * `timestamp_gte` and `timestamp_lte` to obtain missing data within a
    timespan (greater than or equal, less then or equal)


    For example,
    `<example.com>/<api_endpoint>?<params>&pulse_number_gt=431902&pulse_number_lt=431904`.
servers:
  - url: example.com
    description: Test server.
tags:
  - name: Pulse
    description: >-
      Pulse is the trigger for the production of a new jet drop. Also serves as
      the default time unit on Insolar Network.
  - name: Jet drop
    description: >-
      Jet drop is the unit of storage for jets. It contains all records that are
      registered within a pulse and associated with a particular jet.
  - name: Record
    description: >-
      Record is the minimum unit of storage that contains an associated request,
      response, and maintenance details. Records are grouped by a Lifeline.
  - name: Search
    description: >-
      Search identifies the entity type in the request and redirects the request
      to the appropriate endpoints for additional entity metadata.
paths:
  /api/v1/pulses:
    get:
      summary: pulses
      description: Get a range of pulses from `timestamp_gte` to `timestamp_lte`.
      operationId: pulses
      tags:
        - Pulse
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/fromPulseNumberParam'
        - $ref: '#/components/parameters/timestamp_gte'
        - $ref: '#/components/parameters/timestamp_lte'
      responses:
        '200':
          $ref: '#/components/responses/pulsesResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '500':
          $ref: '#/components/responses/500Response'
  '/api/v1/pulses/{pulse_number}':
    get:
      summary: pulse
      description: Gets pulse by `pulse_number`.
      operationId: pulse
      tags:
        - Pulse
      parameters:
        - $ref: '#/components/parameters/pulse_number_path'
      responses:
        '200':
          $ref: '#/components/responses/pulseResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  '/api/v1/jet-drops/{jet_drop_id}':
    get:
      summary: jet drop by ID
      description: Gets a jet drop by `jet_drop_id`.
      operationId: jetDropByID
      tags:
        - Jet drop
      parameters:
        - $ref: '#/components/parameters/jet_drop_id_path'
      responses:
        '200':
          $ref: '#/components/responses/jetDropResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
  '/api/v1/pulses/{pulse_number}/jet-drops':
    get:
      summary: jet drops by pulse number
      description: Gets jet drops in a pulse by `pulse_number`.
      operationId: JetDropsByPulseNumber
      tags:
        - Jet drop
      parameters:
        - $ref: '#/components/parameters/pulse_number_path'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/from_jet_drop_id'
      responses:
        '200':
          $ref: '#/components/responses/jetDropsResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '500':
          $ref: '#/components/responses/500Response'
  '/api/v1/jets/{jet_id}/jet-drops':
    get:
      summary: jet drops by jet ID
      description: Gets jet drops in a jet by `jet_id`.
      operationId: JetDropsByJetID
      tags:
        - Jet drop
      parameters:
        - $ref: '#/components/parameters/jet_id_path'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort_by_pulse'
        - $ref: '#/components/parameters/pulse_number_gte'
        - $ref: '#/components/parameters/pulse_number_lte'
      responses:
        '200':
          $ref: '#/components/responses/jetDropsResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '500':
          $ref: '#/components/responses/500Response'
  '/api/v1/jet-drops/{jet_drop_id}/records':
    get:
      summary: records
      description: Gets all records in a jet drop by `jet_drop_id`.
      operationId: jet_drop_records
      tags:
        - Record
      parameters:
        - $ref: '#/components/parameters/jet_drop_id_path'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/from_index'
        - $ref: '#/components/parameters/recordTypeParam'
      responses:
        '200':
          $ref: '#/components/responses/recordsResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '500':
          $ref: '#/components/responses/500Response'
  '/api/v1/lifeline/{object_reference}/records':
    get:
      summary: object lifeline
      description: Gets a lifeline with all its records by `object_reference`.
      operationId: object_lifeline
      tags:
        - Record
      parameters:
        - $ref: '#/components/parameters/object_reference_path'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/from_index'
        - $ref: '#/components/parameters/sort_by_index'
        - $ref: '#/components/parameters/pulse_number_gt'
        - $ref: '#/components/parameters/pulse_number_lt'
        - $ref: '#/components/parameters/timestamp_gte'
        - $ref: '#/components/parameters/timestamp_lte'
      responses:
        '200':
          $ref: '#/components/responses/recordsResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '500':
          $ref: '#/components/responses/500Response'
  /api/v1/search:
    get:
      summary: search
      description: Gets the entity type for the searching `value`.
      operationId: search
      tags:
        - Search
      parameters:
        - name: value
          in: query
          required: true
          schema:
            type: string
          description: Searching value.
      responses:
        '200':
          $ref: '#/components/responses/searchResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '404':
          $ref: '#/components/responses/404Response'
        '500':
          $ref: '#/components/responses/500Response'
components:
  parameters:
    limit:
      in: query
      name: limit
      description: Number of entries per page.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      example: 100
    offsetParam:
      in: query
      name: offset
      description: Number of entries to skip from the starting point.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      example: 10
    fromPulseNumberParam:
      in: query
      name: from_pulse_number
      description: Specific pulse number to paginate from.
      required: false
      schema:
        type: integer
        format: int64
        minimum: 0
      example: 43612021
    timestamp_gte:
      in: query
      name: timestamp_gte
      description: Starting point (≥) for a timespan. Unix time format.
      required: false
      schema:
        type: integer
        format: int64
        description: Unix timestamp.
      example: 1451743413
    timestamp_lte:
      in: query
      name: timestamp_lte
      description: Ending point (≥) for a timespan. Unix time format.
      required: false
      schema:
        type: integer
        format: int64
        description: Unix timestamp.
      example: 1451743413
    pulse_number_path:
      in: path
      name: pulse_number
      required: true
      schema:
        type: integer
        format: int64
        minimum: 0
      description: Pulse number.
      example: 43648102
    jet_drop_id_path:
      name: jet_drop_id
      in: path
      required: true
      schema:
        type: string
      description: Jet drop ID—a combination of `jet_id` with `pulse_number`.
      example: '43648102:0010'
    from_jet_drop_id:
      name: from_jet_drop_id
      in: query
      required: false
      schema:
        type: string
      description: >-
        Specific jet drop ID to paginate from—a combination of jet_id` with
        `pulse_number`.
      example: '43612021:3'
    jet_id_path:
      in: path
      name: jet_id
      required: true
      schema:
        type: string
      description: Jet ID.
      example: 10
    sort_by_pulse:
      in: query
      name: sort_by
      description: >-
        Sorting direction for the result set based on the `pulse_number` and
        `jet_id`.
      required: false
      schema:
        type: string
        default: 'pulse_number_desc,jet_id_asc'
        enum:
          - 'pulse_number_asc,jet_id_desc'
          - 'pulse_number_desc,jet_id_asc'
      example: 'pulse_number_asc,jet_id_desc'
    pulse_number_gte:
      in: query
      name: pulse_number_gte
      description: Filtering where pulse number is greater than or equal to
      required: false
      schema:
        type: integer
        minimum: 0
      example: 43648104
    pulse_number_lte:
      in: query
      name: pulse_number_lte
      description: Filtering where pulse number is less than or equal to.
      required: false
      schema:
        type: integer
        minimum: 0
      example: 43648106
    from_index:
      name: from_index
      description: >-
        Specific index to paginate from—a combination of pulse_number with order
        (record number in a jet drop).
      in: query
      required: false
      schema:
        type: string
      example: '43612021:3'
    recordTypeParam:
      name: type
      in: query
      description: Record type in a query.
      required: false
      schema:
        type: string
        enum:
          - state
          - request
          - result
      example: state
    object_reference_path:
      name: object_reference
      in: path
      required: true
      schema:
        type: string
      description: Object reference.
      example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
    sort_by_index:
      in: query
      name: sort_by
      description: Index-based sorting direction for the result set.
      required: false
      schema:
        type: string
        default: index_asc
        enum:
          - index_desc
          - index_asc
      example: index_asc
    pulse_number_gt:
      in: query
      name: pulse_number_gt
      description: Filtering where pulse number is greater than
      required: false
      schema:
        type: integer
        minimum: 0
      example: 43648104
    pulse_number_lt:
      in: query
      name: pulse_number_lt
      description: Filtering where pulse number is less than.
      required: false
      schema:
        type: integer
        minimum: 0
      example: 43648106
  responses:
    pulsesResponse:
      description: Paginated array of pulses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pulses'
    400Response:
      description: |
        Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/code-validation-error'
    500Response:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/code-error'
    pulseResponse:
      description: Pulse
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/pulse'
    404Response:
      description: Not found
    jetDropResponse:
      description: Jet drop
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/jet-drop'
    jetDropsResponse:
      description: Paginated array of jet drops
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/jet-drops'
    recordsResponse:
      description: Paginated array of records grouped by lifeline
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/records'
    searchResponse:
      description: Type of the searched entity
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/search-pulse'
              - $ref: '#/components/schemas/search-record'
              - $ref: '#/components/schemas/search-jet-drop'
              - $ref: '#/components/schemas/search-lifeline'
  schemas:
    pulses:
      description: A paged array of pulses.
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: Number of entries in the array.
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/pulse'
    code-validation-error:
      description: Response codes.
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
        link:
          type: string
        validation_failures:
          type: array
          items:
            $ref: '#/components/schemas/code-validation-failures'
    code-error:
      description: Response codes.
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string
    pulse:
      description: Pulse representation.
      type: object
      properties:
        pulse_number:
          type: integer
          format: int64
          description: Pulse number.
          example: 43648102
        prev_pulse_number:
          type: integer
          format: int64
          description: Previous pulse number.
          example: 43648092
        next_pulse_number:
          type: integer
          format: int64
          description: Next pulse number.
          example: 43648112
        jet_drop_amount:
          type: integer
          format: int64
          description: Number of all jet drops in the pulse.
          example: 16
        record_amount:
          type: integer
          format: int64
          description: Number of all records in the pulse.
          example: 245
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp.
          example: 1451743413
        is_complete:
          type: boolean
          description: Pulse completeness status.
          example: true
    jet-drop:
      description: Jet Drop representation.
      type: object
      properties:
        jet_drop_id:
          type: string
          description: Jet drop ID is a combination of `jet_id` with `pulse_number`.
          example: '43648102:0010'
          pattern: '^(\d+:[0-1]{2,64})$'
        next_jet_drop_id:
          type: array
          format: string
          description: Next `jet_drop_id`.
          example:
            - '43648104:00100'
            - '43648104:00101'
          items:
            type: string
            description: Jet drop ID is a combination of `jet_id` with `pulse_number`.
            example: '43648102:0010'
            pattern: '^(\d+:[0-1]{2,64})$'
        prev_jet_drop_id:
          type: array
          format: string
          description: Previous `jet_drop_id`.
          example:
            - '43648101:0010'
          items:
            type: string
            description: Jet drop ID is a combination of jet_id` with `pulse_number`.
            example: '43648102:0010'
            pattern: '^(\d+:[0-1]{2,64})$'
        jet_id:
          type: string
          description: Jet ID.
          example: '0010'
          pattern: '^([0-1]{2,64})$'
        pulse_number:
          type: integer
          format: int64
          description: Pulse number.
          example: 43612021
        record_amount:
          type: integer
          format: int64
          description: Number of all records in the pulse.
          example: 245
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp.
          example: 1451743413
        hash:
          type: string
          description: Record hash.
          example: >-
            0JfQtNC10YHRjCDQvNC+0LPQu9CwINCx0YvRgtGMINCy0LDRiNCwINGA0LXQutC70LDQvNCw
    jet-drops:
      description: A paginated array of jet drops.
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: Number of entries in the array.
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/jet-drop'
    records:
      description: A paginated array of records.
      type: object
      properties:
        total:
          type: integer
          format: int64
          description: Number of entries in the array.
          example: 100
        result:
          type: array
          items:
            $ref: '#/components/schemas/record'
    search-pulse:
      description: Pulse response.
      title: Pulse response
      type: object
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - pulse
          example: pulse
        meta:
          type: object
          description: Meta data.
          properties:
            pulse_number:
              type: integer
              format: int64
              description: Pulse number.
              example: 1
    search-record:
      description: Record response.
      title: Record response
      type: object
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - record
          example: record
        meta:
          type: object
          description: Meta data.
          properties:
            object_reference:
              type: string
              description: Object reference.
              example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
              pattern: '^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$'
            index:
              type: string
              description: >-
                Index is combination of `pulse_number` with `order` (record
                number in a jet drop).
              example: '43648102:7'
    search-jet-drop:
      description: Jet drop response.
      title: Jet drop response
      type: object
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - jet-drop
          example: jet-drop
        meta:
          type: object
          description: Meta data.
          properties:
            jet_drop_id:
              type: string
              description: Jet drop ID is a combination of `jet_id` with `pulse_number`.
              example: '43612021:001'
    search-lifeline:
      description: Lifeline response.
      title: Lifeline response
      type: object
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - lifeline
          example: lifeline
        meta:
          type: object
          description: Meta data.
          properties:
            object_reference:
              type: string
              description: Object reference.
              example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
    code-validation-failures:
      description: Validation failure.
      type: object
      properties:
        property:
          type: string
          description: Property name.
        failure_reason:
          type: string
          description: Failure reason.
    record:
      description: Record representation.
      type: object
      properties:
        reference:
          type: string
          description: Record reference.
          example: 'insolar:1Apn2LmIL4ehiZ5NN0fLo5qJR7CeodnLDUtmvI9TrWVw.record'
          pattern: '^insolar:1[a-zA-Z0-9_-]{42,43}\.record$'
        prev_record_reference:
          type: string
          description: Previous record reference.
          example: 'insolar:1Apn2LmIL4ehiZ5NN0fLo5qJR7CeodnLDUtmvI9TrWVy.record'
          pattern: '^insolar:1[a-zA-Z0-9_-]{42,43}\.record$'
        object_reference:
          type: string
          description: Object reference.
          example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
          pattern: '^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$'
        prototype_reference:
          type: string
          description: Prototype reference.
          example: 'insolar:1Ajx0cKvLPzFwV-vW4jp-wuuwUcDv1lgvQFrIAvQYH3g'
          pattern: '^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$'
        type:
          type: string
          description: Record type.
          enum:
            - state
            - request
            - result
          example: state
        timestamp:
          type: integer
          format: int64
          description: Unix timestamp.
          example: 1451743413
        payload:
          type: string
          description: Record payload.
          example: >-
            0KLQvtC/INC60L7QvdGC0LXQvdGCLCDQu9GD0YfRiNCw0Y8g0L/Qu9Cw0YLRhNC+0YDQvNCw
        hash:
          type: string
          description: Record hash.
          example: >-
            0JfQtNC10YHRjCDQvNC+0LPQu9CwINCx0YvRgtGMINCy0LDRiNCwINGA0LXQutC70LDQvNCw
        pulse_number:
          type: integer
          format: int64
          description: Pulse number.
          example: 436120213
        jet_id:
          type: string
          description: Jet ID.
          example: '0010'
          pattern: '^([0-1]{2,64})$'
        jet_drop_id:
          type: string
          description: Jet drop ID is a combination of `jet_id` with `pulse_number`.
          example: '43648102:0010'
        order:
          type: integer
          format: int64
          description: Order is the record order number in the jet drop.
          example: '3'
        index:
          type: string
          description: >-
            Index is combination of pulse_number with order (record number in a
            jet drop).
          example: '43648102:7'
