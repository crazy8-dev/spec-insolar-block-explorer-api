openapi: 3.0.0
info:
  version: 1.0.0
  title: Insolar Block Explorer API
  contact:
    name: Insolar dev team
    url: 'https://insolar.io/team.html'
    email: dev-support@insolar.io
  description: |
    BE description
servers:
  - url: example.com
    description: The test server.
tags:
  - name: pulse
  - name: jet-drop
  - name: record
paths:
  /api/v1/pulses:
    get:
      summary: Pulses
      operationId: pulses
      tags:
        - pulse
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: The numbers of items to return.
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          description: >-
            The number of items to skip before starting to collect the result
            set.
        - name: from_item
          in: query
          required: false
          schema:
            type: integer
            format: int64
          description: The pagination starting point. Accepting pulse_number.
        - in: query
          name: from_pulse_number
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
          description: From which Pulse number.
        - in: query
          name: to_pulse_number
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
          description: To which Pulse number.
        - in: query
          name: from_jet_drop_amount
          required: false
          schema:
            type: integer
            minimum: 0
          description: To which jet_drop_amount.
        - in: query
          name: to_jet_drop_amount
          required: false
          schema:
            type: integer
            minimum: 0
          description: From which jet_drop_amount.
      responses:
        '200':
          description: A paged array of Pulses.
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: integer
                    format: int64
                    description: Total results.
                    example: 100
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        pulse_number:
                          type: integer
                          format: int64
                          description: Pulse number.
                          example: 43648102
                        prev_pulse_number:
                          type: integer
                          format: int64
                          description: Previous pulse number.
                          example: 43648092
                        next_pulse_number:
                          type: integer
                          format: int64
                          description: Next pulse number.
                          example: 43648112
                        jet_drop_amount:
                          type: integer
                          format: int64
                          description: Amount of all Jet Drop in the Pulse.
                          example: 16
                        record_amount:
                          type: integer
                          format: int64
                          description: Number of all records in the Pulse.
                          example: 245
                        timestamp:
                          type: integer
                          format: int64
                          description: Unix timestamp.
                          example: 1451743413
                        is_complete:
                          type: boolean
                          description: Pulse fullness status.
                          example: true
        '400':
          description: >
            Bad request. One or more of the query parameters failed validation
            or was not provided.

            The request should not be attempted until the parameters are
            changed.

            The fields that failed validation will be detailed where possible.
          content:
            application/json:
              schema:
                required:
                  - validation_failures
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  description:
                    type: string
                  link:
                    type: string
                  validation_failures:
                    type: array
                    items:
                      type: object
                      properties:
                        property:
                          type: string
                          description: Property name
                        failure_reason:
                          type: string
                          description: Failure reason
        '500':
          description: Internal server error. Unable to process request due to an error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  description:
                    type: string
                  link:
                    type: string
  '/api/v1/pulses/{pulse_number}':
    get:
      summary: Pulse
      operationId: pulse
      tags:
        - pulse
      parameters:
        - in: path
          name: pulse_number
          required: true
          schema:
            type: integer
            format: int64
            minimum: 0
          description: The Pulse number.
      responses:
        '200':
          description: A Pulse.
          content:
            application/json:
              schema:
                $ref: >-
                  #/paths/~1api~1v1~1pulses/get/responses/200/content/application~1json/schema/properties/result/items
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '404':
          description: >-
            Not found. The specified Resource does not exist. No body response
            required.
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
  '/api/v1/jet-drops/{jet_drop_id}':
    get:
      summary: JetDrop by ID
      operationId: jetDropByID
      tags:
        - jet-drop
      parameters:
        - name: jet_drop_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of JetDrop.
      responses:
        '200':
          description: A JetDrop.
          content:
            application/json:
              schema:
                type: object
                properties:
                  jet_drop_id:
                    type: string
                    description: JetDrop ID is concantination of jet_id and pulse_number.
                    example: '43648102:0010'
                    pattern: '^(\d+:[0-1]{2,64})$'
                  next_jet_drop_id:
                    type: array
                    format: string
                    description: Next jet_drop_id.
                    example:
                      - '43648104:00100'
                      - '43648104:00101'
                    items:
                      type: string
                      description: JetDrop ID is concantination of jet_id and pulse_number
                      example: '43648102:0010'
                      pattern: '^(\d+:[0-1]{2,64})$'
                  prev_jet_drop_id:
                    type: array
                    format: string
                    description: Previous jet_drop_id.
                    example:
                      - '43648101:0010'
                    items:
                      $ref: >-
                        #/paths/~1api~1v1~1jet-drops~1%7Bjet_drop_id%7D/get/responses/200/content/application~1json/schema/properties/next_jet_drop_id/items
                  jet_id:
                    type: string
                    description: Jet ID.
                    example: '0010'
                    pattern: '^([0-1]{2,64})$'
                  pulse_number:
                    type: integer
                    format: int64
                    description: Pulse number.
                    example: 43612021
                  record_amount:
                    type: integer
                    format: int64
                    description: Number of all records in the pulse.
                    example: 245
                  timestamp:
                    type: integer
                    format: int64
                    description: Unix timestamp.
                    example: 1451743413
                  hash:
                    type: string
                    description: Record hash.
                    example: >-
                      0JfQtNC10YHRjCDQvNC+0LPQu9CwINCx0YvRgtGMINCy0LDRiNCwINGA0LXQutC70LDQvNCw
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '404':
          $ref: '#/paths/~1api~1v1~1pulses~1%7Bpulse_number%7D/get/responses/404'
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
  '/api/v1/pulses/{pulse_number}/jet-drops':
    get:
      summary: JetDrops by Pulse Number
      operationId: JetDropsByPulseNumber
      tags:
        - jet-drop
      parameters:
        - $ref: '#/paths/~1api~1v1~1pulses~1%7Bpulse_number%7D/get/parameters/0'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/0'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/1'
        - name: from_item
          in: query
          required: false
          schema:
            type: string
          description: The pagination starting point. Accepting jet_drop_id.
      responses:
        '200':
          description: A paged array of JetDrops.
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: integer
                    format: int64
                    description: Total results.
                    example: 100
                  result:
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1api~1v1~1jet-drops~1%7Bjet_drop_id%7D/get/responses/200/content/application~1json/schema
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
  '/api/v1/jets/{jet_id}/jet-drops':
    get:
      summary: JetDrops by JetID
      operationId: JetDropsByJetID
      tags:
        - jet-drop
      parameters:
        - in: path
          name: jet_id
          required: true
          schema:
            type: string
          description: The JetID.
          example: '0010'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/0'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/1'
        - name: from_item
          in: query
          required: false
          schema:
            type: string
          description: The pagination starting point. Accepting jet_id.
          example: '0010'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/3'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/4'
      responses:
        '200':
          description: A paged array of JetDrops.
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: integer
                    format: int64
                    description: Total results.
                    example: 100
                  result:
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1api~1v1~1jet-drops~1%7Bjet_drop_id%7D/get/responses/200/content/application~1json/schema
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
  '/api/v1/jet-drops/{jet_drop_id}/records':
    get:
      summary: JetDrop records
      operationId: jet_drop_records
      tags:
        - record
      parameters:
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/0'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/1'
        - name: from_item
          in: query
          required: false
          schema:
            type: string
          description: 'The pagination starting point. Accepting pulse_number:order.'
          example: '43612021:3'
        - name: type
          in: query
          description: The record type.
          required: false
          schema:
            type: string
            enum:
              - state
              - request
              - result
        - $ref: '#/paths/~1api~1v1~1jet-drops~1%7Bjet_drop_id%7D/get/parameters/0'
      responses:
        '200':
          description: A paged array of records.
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: integer
                    format: int64
                    description: Total results.
                    example: 100
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        reference:
                          type: string
                          description: Record reference.
                          example: >-
                            insolar:1Apn2LmIL4ehiZ5NN0fLo5qJR7CeodnLDUtmvI9TrWVw.record
                          pattern: '^insolar:1[a-zA-Z0-9_-]{42,43}\.record$'
                        object_reference:
                          type: string
                          description: Object reference.
                          example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
                          pattern: >-
                            ^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$
                        prototype_reference:
                          type: string
                          description: Prototype reference.
                          example: 'insolar:1Ajx0cKvLPzFwV-vW4jp-wuuwUcDv1lgvQFrIAvQYH3g'
                          pattern: >-
                            ^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$
                        type:
                          type: string
                          description: Record type.
                          enum:
                            - state
                            - request
                            - result
                          example: state
                        timestamp:
                          type: integer
                          format: int64
                          description: Unix timestamp.
                          example: 1451743413
                        payload:
                          type: string
                          description: Record payload.
                          example: >-
                            0KLQvtC/INC60L7QvdGC0LXQvdGCLCDQu9GD0YfRiNCw0Y8g0L/Qu9Cw0YLRhNC+0YDQvNCw
                        hash:
                          type: string
                          description: Record hash.
                          example: >-
                            0JfQtNC10YHRjCDQvNC+0LPQu9CwINCx0YvRgtGMINCy0LDRiNCwINGA0LXQutC70LDQvNCw
                        pulse_number:
                          type: integer
                          format: int64
                          description: Pulse number.
                          example: 43612021
                        jet_id:
                          type: string
                          description: Jet ID.
                          example: '0010'
                          pattern: '^([0-1]{2,64})$'
                        jet_drop_id:
                          type: string
                          description: >-
                            JetDrop ID is concantination of jet_id and
                            pulse_number.
                          example: '43648102:0010'
                        order:
                          type: int
                          format: int64
                          description: Order is the record order number in the Jet Drop.
                          example: '3'
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
  '/api/v1/lifeline/{object_reference}/records':
    get:
      summary: Object Lifeline
      operationId: object_lifeline
      tags:
        - record
      parameters:
        - name: object_reference
          in: path
          required: true
          schema:
            type: string
          description: The reference of object.
          example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/0'
        - $ref: '#/paths/~1api~1v1~1pulses/get/parameters/1'
        - name: from_item
          in: query
          required: false
          schema:
            type: string
          description: 'The pagination starting point. Accepting pulse_number:order.'
          example: '43612021:3'
        - name: record_reference
          in: query
          required: false
          schema:
            type: string
          description: The pagination starting point. Accepting record_reference.
          example: 'insolar:1Apn2LmIL4ehiZ5NN0fLo5qJR7CeodnLDUtmvI9TrWVw.record'
        - $ref: >-
            #/paths/~1api~1v1~1jet-drops~1%7Bjet_drop_id%7D~1records/get/parameters/3
      responses:
        '200':
          description: A paged array of records.
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: integer
                    format: int64
                    description: Total results.
                    example: 100
                  result:
                    type: array
                    items:
                      $ref: >-
                        #/paths/~1api~1v1~1jet-drops~1%7Bjet_drop_id%7D~1records/get/responses/200/content/application~1json/schema/properties/result/items
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
  /api/v1/search:
    get:
      summary: Search Data
      operationId: search
      tags:
        - search
      parameters:
        - name: value
          in: query
          required: true
          schema:
            type: string
          description: The searching value.
      responses:
        '200':
          description: A Search ability.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/responses-search-pulse-yaml'
                  - $ref: '#/components/schemas/responses-search-record-yaml'
                  - $ref: '#/components/schemas/responses-search-jet-drop-yaml'
                  - $ref: '#/components/schemas/responses-search-lifeline-yaml'
                  - $ref: '#/components/schemas/responses-search-jetid-yaml'
        '400':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/400'
        '404':
          $ref: '#/paths/~1api~1v1~1pulses~1%7Bpulse_number%7D/get/responses/404'
        '500':
          $ref: '#/paths/~1api~1v1~1pulses/get/responses/500'
components:
  schemas:
    responses-search-pulse-yaml:
      description: Pulse response for Search.
      title: Pulse response.
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - pulse
          example: pulse
        meta:
          type: object
          description: Meta data.
          properties:
            pulse_number:
              type: integer
              format: int64
              description: Pulse Number.
              example: 1
      x-json-schema-id: responses/search-pulse.yaml
    responses-search-record-yaml:
      description: Record response for Search.
      title: Record response.
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - record
          example: record
        meta:
          type: object
          description: Meta data.
          properties:
            record_ref:
              type: string
              description: Record reference.
              example: 'insolar:1Apn2LmIL4ehiZ5NN0fLo5qJR7CeodnLDUtmvI9TrWVw.record'
      x-json-schema-id: responses/search-record.yaml
    responses-search-jet-drop-yaml:
      description: Record response for Search.
      title: Record response.
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - jet-drop
          example: jet-drop
        meta:
          type: object
          description: Meta data.
          properties:
            jet_drop_id:
              type: string
              description: JetDrop ID.
              example: '43612021:001'
      x-json-schema-id: responses/search-jet-drop.yaml
    responses-search-lifeline-yaml:
      description: Lifeline response for Search.
      title: Record response.
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - lifeline
          example: lifeline
        meta:
          type: object
          description: Meta data.
          properties:
            object_reference:
              type: string
              description: Object reference.
              example: 'insolar:1AAEAAS2JLnvh2bkLUUlUijqcp7--k8_GIz9qLKxZXLE'
      x-json-schema-id: responses/search-lifeline.yaml
    responses-search-jetid-yaml:
      description: Record response for Search.
      title: Record response.
      properties:
        type:
          type: string
          description: Result type.
          enum:
            - jetid
          example: jetid
        meta:
          type: object
          description: Meta data.
          properties:
            jet-id:
              type: string
              description: Jet ID.
              example: '0010'
      x-json-schema-id: responses/search-jetid.yaml
