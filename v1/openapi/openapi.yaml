openapi: "3.0.0"
info:
  version: 1.0.0
  title: Insolar Explorer API
  contact:
    name: Insolar dev team
    url: https://insolar.io/team.html
    email: dev-support@insolar.io
  # x-logo:
  #   url: https://insolar.io/logo.svg
  #   altText: Insolar
  #   href: https://insolar.io
  description: |
    [Insolar Explorer](https://github.com/insolar/block-explorer)'s REST API documentation.

    Insolar Explorer is a service that allows users to search for and view the contents of individual transactions, records, lifelines, jet drops and jets.

    * Record—minimum unit of storage that contains an associated request, response, and maintenance details
    * Lifeline—sequence of records for object state where an object is a smart contract instance
    * Jet drop—unit of storage for jets
    * Jet—groups of lifelines

    Main API endpoints include:
    * Search endpoint: `/api/v1/search`
    * Endpoints for each entity type:
      * Records: `/api/v1/jet-drops/{jet_drop_id}/records`
      * Lifeline: `/api/v1/lifeline/{object_reference}/records`
      * Pulse: `/api/v1/pulses/{pulse_number}`
      * Pulses: `/api/v1/pulses`
      * Jet drop by jet ID: `/api/v1/jets/{jet_id}/jet-drops`
      * Jet drop by its ID: `/api/v1/jet-drops/{jet_drop_id}`
      * Jet drop by pulse number: `/api/v1/pulses/{pulse_number}/jet-drops`

    A search request first gets to the search endpoint where its the entity type `value` is identified.

    It then is redirected to the appropriate endpoint for detailed metadata to show the user on the Insolar Explorer Web UI.

    Search results can be paginated. Pagination parameters are optional and include:
    * Starting point that depends on the searched entity type: `from_index`, `from_pulse_number`, or `from_jet_drop_id`
    * Number of entries per page: `limit`
    * Number of entries to skip from the starting point to show on a new page: `offset`

    For example, for 10 entries per page starting from the pulse number 431920 for a set of 200 entries: `<example.com>/<api_endpoint>?<params>&from_pulse_number=431920&limit=10&offset=0`.

    Search results can additionally be sorted by `index` or `pulse` in the descending or ascending order.

    For example, `<example.com>/<api_endpoint>?<params>&sort_by=-index`.

    Search results shown to the user on the Insolar Explorer Web UI may miss some data. The `Reload` button gets the missed data via requests to the API with additional filtering parameters:
    * `jet_drop_id_gt` and `jet_drop_id_lt` to obtain missing data within a range of jet drops (greater than, less then)
    * `pulse_number_gt` and `pulse_number_lt` to obtain missing data within a range of pulses (greater than, less then)
    * `timestamp_gte` and `timestamp_lte` to obtain missing data within a timespan (greater than or equal, less then or equal)

    For example, `<example.com>/<api_endpoint>?<params>&pulse_number_gt=431902&pulse_number_lt=431904`.

servers:
  - url: example.com
    description: Test server.

tags:
  - name: Pulse
    description: Pulse is the trigger for the production of a new jet drop. Also serves as the default time unit on Insolar Network.
  - name: Jet drop
    description: Jet drop is the unit of storage for jets. It contains all records that are registered within a pulse and associated with a particular jet.
  - name: Record
    description: Record is the minimum unit of storage that contains an associated request, response, and maintenance details. Records are grouped by a Lifeline.
  - name: Search
    description: Search identifies the entity type in the request and redirects the request to the appropriate endpoints for additional entity metadata.

paths:
  /api/v1/pulses:
    $ref: 'requests/pulses.yaml'
  /api/v1/pulses/{pulse_number}:
    $ref: 'requests/pulse.yaml'
  /api/v1/jet-drops/{jet_drop_id}:
    $ref: 'requests/jet-drop-byid.yaml'
  /api/v1/pulses/{pulse_number}/jet-drops:
    $ref: 'requests/jet-drops-bypulse.yaml'
  /api/v1/jets/{jet_id}/jet-drops:
    $ref: 'requests/jet-drops-byjetid.yaml'
  /api/v1/jet-drops/{jet_drop_id}/records:
    $ref: 'requests/records.yaml'
  /api/v1/lifeline/{object_reference}/records:
    $ref: 'requests/lifeline.yaml'
  /api/v1/search:
    $ref: 'requests/search.yaml'

